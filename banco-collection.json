{
	"info": {
		"_postman_id": "c71991d1-2386-4ef5-adf4-8aa955bda430",
		"name": "Serasa Automação",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "14343546"
	},
	"item": [
		{
			"name": "Token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.sendRequest({\r",
							"    url: pm.environment.get(\"URL\") + '/auth',\r",
							"    method: 'get',\r",
							"    header: {\r",
							"        'content-type': 'application/json'\r",
							"    },\r",
							"    body: {\r",
							"        mode: 'raw',\r",
							"    }\r",
							"}, (err, res) => {\r",
							"    pm.environment.set(\"auth\", \"bearer \" + res.json().token);\r",
							"\r",
							"    pm.test(\"Código status é 200\", () => {\r",
							"        pm.response.to.have.status(200);\r",
							"    });\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{URL}}/auth",
					"host": [
						"{{URL}}"
					],
					"path": [
						"auth"
					]
				}
			},
			"response": []
		},
		{
			"name": "Busca de todos os bancos",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Código status é 201\",() => {\r",
							"    pm.response.to.have.status(200)\r",
							"});\r",
							"\r",
							"const jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Json retornado é um array\", () => {\r",
							"    pm.expect(jsonData).to.be.an(\"array\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Quantidade de itens retornados é igual a 10\", () => {\r",
							"    pm.expect(jsonData.length).to.be.eql(10);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{auth}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{URL}}/bank",
					"host": [
						"{{URL}}"
					],
					"path": [
						"bank"
					]
				}
			},
			"response": []
		},
		{
			"name": "Busca bancos do estado de SC",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code é 200\", () => {\r",
							"    pm.response.to.have.status(200)\r",
							"});\r",
							"\r",
							"pm.test(\"Retornou os valores esperados\", () => {\r",
							"const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson[0].estadoAtuacao).to.eql(\"SC\");\r",
							"\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{auth}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{URL}}/bank?estadoAtuacao=SC",
					"host": [
						"{{URL}}"
					],
					"path": [
						"bank"
					],
					"query": [
						{
							"key": "estadoAtuacao",
							"value": "SC"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Alteração das informações do Banco do Brasil",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Código status é 200\",() => {\r",
							"    pm.response.to.have.status(200)\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Retornou os valores esperados\", () => {\r",
							"const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson[1].banco).to.eql(\"Banco do Brasil\");\r",
							"    pm.expect(responseJson[1].estadoAtuacao).to.eql(\"SP\");\r",
							"    pm.expect(responseJson[1].juros).to.eql(\"15,00%\");\r",
							"    pm.expect(responseJson[0].mensagem).to.eql(\"Registro alterado com sucesso!\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{auth}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": " {\r\n        \"id\": 1,\r\n        \"banco\": \"Banco do Brasil\",\r\n        \"estadoAtuacao\": \"SP\",\r\n        \"juros\": \"15%\"\r\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/bank",
					"host": [
						"{{URL}}"
					],
					"path": [
						"bank"
					]
				}
			},
			"response": []
		},
		{
			"name": "Adicionar Banco",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Código status é 201\", () => {\r",
							"    pm.response.to.have.status(201)\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Retornou os valores esperados\", () => {\r",
							"const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson[0].banco).to.eql(\"Banco Teste\");\r",
							"    pm.expect(responseJson[0].estadoAtuacao).to.eql(\"SC\");\r",
							"    pm.expect(responseJson[0].juros).to.eql(\"10,00%\");\r",
							"    pm.expect(responseJson[1].mensagem).to.eql(\"Banco adicionado com sucesso!\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{auth}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "\r\n{\r\n    \"banco\": \"Banco Teste\",\r\n    \"estadoAtuacao\": \"SC\",\r\n    \"juros\": \"10,00%\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/bank",
					"host": [
						"{{URL}}"
					],
					"path": [
						"bank"
					]
				}
			},
			"response": []
		},
		{
			"name": "Adicionando um banco com caractere especial",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Melhoria sugerida: Adicionando uma caractere especial ao banco, a resposta esperada seria 400.\r",
							"\r",
							"pm.test(\"Código status é 400\", () => {\r",
							"    pm.response.to.have.status(400)\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{auth}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "\r\n\r\n {\r\n        \"banco\": \"Banco @azul\",\r\n        \"estadoAtuacao\": \"ES\",\r\n        \"juros\": \"15,00\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/bank",
					"host": [
						"{{URL}}"
					],
					"path": [
						"bank"
					]
				}
			},
			"response": []
		},
		{
			"name": "Adicionando um  estado atuação sem sigla",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Melhoria sugerida: Ao adicionar um novo registro no banco sem a sigla de estado de atuação, a resposta esperada seria 400.\r",
							"\r",
							"pm.test(\"Código status é 400\", () => {\r",
							"    pm.response.to.have.status(400)\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{auth}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "\r\n\r\n {\r\n        \"banco\": \"Banco azul\",\r\n        \"estadoAtuacao\": \"AMAZONAS\",\r\n        \"juros\": \"15,00\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/bank",
					"host": [
						"{{URL}}"
					],
					"path": [
						"bank"
					]
				}
			},
			"response": []
		},
		{
			"name": "Adicionando um banco sem um campo",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Melhoria sugerida: Ao adicionar um novo banco sem um campo, a resposta esperada seria 400.\r",
							"\r",
							"pm.test(\"Código status é 400\", () => {\r",
							"    pm.response.to.have.status(400)\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{auth}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "\r\n\r\n {\r\n        \"estadoAtuacao\": \"SP\",\r\n        \"juros\": null \r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/bank",
					"host": [
						"{{URL}}"
					],
					"path": [
						"bank"
					]
				}
			},
			"response": []
		},
		{
			"name": "Adicionando um banco vazio",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Melhoria sugerida: Ao adicionar um novo banco sem um campo, a resposta esperada seria 400.\r",
							"\r",
							"pm.test(\"Código status é 400\", () => {\r",
							"    pm.response.to.have.status(400)\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{auth}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "\r\n\r\n {\r\n        \"banco\": \"\",\r\n        \"estadoAtuacao\": \"ES\",\r\n        \"juros\": \"15,00\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/bank",
					"host": [
						"{{URL}}"
					],
					"path": [
						"bank"
					]
				}
			},
			"response": []
		},
		{
			"name": "Não filtra por id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Melhoria sugerida: Ao buscar um registro em um banco pelo ID, a resposta esperada seria o retorno apenas do registro com o ID 5.\r",
							"\r",
							"pm.test(\"Código status é 200\", () => {\r",
							"    pm.response.to.have.status(200)\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Retornou os valores esperados\", () => {\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.length).to.equal(1);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{auth}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{URL}}/bank?id=5",
					"host": [
						"{{URL}}"
					],
					"path": [
						"bank"
					],
					"query": [
						{
							"key": "id",
							"value": "5"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Não deleta",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Melhoria sugerida: Ao deletar um banco de dados, a resposta esperada seria 200.\r",
							"\r",
							"pm.test(\"Código status é 200\", () => {\r",
							"    pm.response.to.have.status(200)\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyLCJkZXNhZmlvIjoic2VyYXNhIn0.oOMv4kf9hKMtuatZEZJyESVu9Z7h6hGBwrZRJ-9HkCU",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://8dac9f4e-fcb2-4e8f-857a-e4ed3497a0d8.mock.pstmn.io/bank?estadoAtuacao=SC",
					"protocol": "https",
					"host": [
						"8dac9f4e-fcb2-4e8f-857a-e4ed3497a0d8",
						"mock",
						"pstmn",
						"io"
					],
					"path": [
						"bank"
					],
					"query": [
						{
							"key": "estadoAtuacao",
							"value": "SC"
						}
					]
				}
			},
			"response": []
		}
	]
}